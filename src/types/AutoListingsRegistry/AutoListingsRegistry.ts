// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class TokenListed extends ethereum.Event {
  get params(): TokenListed__Params {
    return new TokenListed__Params(this);
  }
}

export class TokenListed__Params {
  _event: TokenListed;

  constructor(event: TokenListed) {
    this._event = event;
  }

  get _listedBy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenERC20(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenERC223(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AutoListingsRegistry extends ethereum.SmartContract {
  static bind(address: Address): AutoListingsRegistry {
    return new AutoListingsRegistry("AutoListingsRegistry", address);
  }

  recordListing(_tokenERC20: Address, _tokenERC223: Address): boolean {
    let result = super.call(
      "recordListing",
      "recordListing(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_tokenERC20),
        ethereum.Value.fromAddress(_tokenERC223),
      ],
    );

    return result[0].toBoolean();
  }

  try_recordListing(
    _tokenERC20: Address,
    _tokenERC223: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "recordListing",
      "recordListing(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_tokenERC20),
        ethereum.Value.fromAddress(_tokenERC223),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class RecordListingCall extends ethereum.Call {
  get inputs(): RecordListingCall__Inputs {
    return new RecordListingCall__Inputs(this);
  }

  get outputs(): RecordListingCall__Outputs {
    return new RecordListingCall__Outputs(this);
  }
}

export class RecordListingCall__Inputs {
  _call: RecordListingCall;

  constructor(call: RecordListingCall) {
    this._call = call;
  }

  get _tokenERC20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenERC223(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RecordListingCall__Outputs {
  _call: RecordListingCall;

  constructor(call: RecordListingCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
